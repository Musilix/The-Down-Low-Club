import express from "express"; // Import express
import { JWT } from "google-auth-library";
import { GoogleSpreadsheet } from "google-spreadsheet";

const router = express.Router(); // Create a new router instance
const serviceAccountAuth = new JWT({
  // env var values here are copied from service account credentials generated by google
  // see "Authentication" section in docs for more info
  email: process.env.GOOGLE_SERVICE_ACCOUNT_EMAIL,
  key: process.env.GOOGLE_PRIVATE_KEY,
  scopes: ["https://www.googleapis.com/auth/spreadsheets"],
});

// router.post("/signup", function (req, res, next) {
//   const userDetails = req.body;
//   const userEmail = userDetails.email ?? "";

//   if (userEmail) {
//     res.send(`User signed up with email address:  ${userEmail}`);
//   } else {
//     res.send("User tried to sign up, but there was no email address included.");
//   }
// });

router.post("/signup", async function (req, res) {
  // Connect to our spreadsheet
  const waitlistDoc = new GoogleSpreadsheet(
    process.env.GOOGLE_SHEET_ID,
    serviceAccountAuth
  );

  // Load in metadata on given workbook
  await waitlistDoc.loadInfo();

  // Grab the first (and only) sheet from our spreadsheet file
  const waitlistSheet = waitlistDoc.sheetsByIndex[0];

  // Get user sent details - parse, sanitize, and confirm it's the right format, or else throw an exception
  const userDetails = req.body;
  const userEmail = userDetails.email ?? "";

  // Add user sent details to given sheet
  const waitListResult = await waitlistSheet.addRow({
    email: userEmail,
    date: new Date().toUTCString(),
  });

  // Confirm details were added properly - if not, throw an exception
  if (waitListResult) {
    res.send("Success");
  } else {
    res.send("Failure");
  }
});

export { router as waitlistRouter }; // Export the router instance
